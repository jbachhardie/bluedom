// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE

import * as Block from "../node_modules/bs-platform/lib/es6/block.js";
import * as Belt_List from "../node_modules/bs-platform/lib/es6/belt_List.js";
import * as Pervasives from "../node_modules/bs-platform/lib/es6/pervasives.js";

function applyProp(element, property) {
  element.id = property[0];
  return /* () */0;
}

function reify(_vNode) {
  while(true) {
    var vNode = _vNode;
    switch (vNode.tag | 0) {
      case 0 : 
          var element = document.createElement(vNode[0]);
          Belt_List.forEach(vNode[1], (function(element){
              return function (param) {
                return applyProp(element, param);
              }
              }(element)));
          Belt_List.forEach(vNode[2], (function(element){
              return function (child) {
                var exit = 0;
                switch (child.tag | 0) {
                  case 1 : 
                      var __x = document.createTextNode(child[0]);
                      element.appendChild(__x);
                      return /* () */0;
                  case 0 : 
                  case 2 : 
                      exit = 1;
                      break;
                  
                }
                if (exit === 1) {
                  var __x$1 = reify(child);
                  element.appendChild(__x$1);
                  return /* () */0;
                }
                
              }
              }(element)));
          return element;
      case 1 : 
          var element$1 = reify(/* HTML */Block.__(0, [
                  "div",
                  /* [] */0,
                  /* [] */0
                ]));
          element$1.textContent = vNode[0];
          return element$1;
      case 2 : 
          _vNode = vNode[0];
          continue ;
          
    }
  };
}

function mount(node, target) {
  var parent = target.parentElement;
  if (parent == null) {
    Pervasives.failwith("NoParent");
    return /* () */0;
  } else {
    parent.appendChild(node);
    parent.removeChild(target);
    return /* () */0;
  }
}

export {
  applyProp ,
  reify ,
  mount ,
  
}
/* No side effect */
